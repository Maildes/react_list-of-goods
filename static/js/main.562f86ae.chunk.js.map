{"version":3,"sources":["components/GoodsList/GoodsList.jsx","components/Button/Button.jsx","App.js","index.js"],"names":["GoodsList","goods","className","map","good","key","Button","handler","textContent","type","onClick","goodsFromServer","App","state","loading","sortAlphabet","sortLength","select","selectedValues","startLoading","setState","handleReverse","reverse","handleAlphabetSort","sort","a","b","localeCompare","handleReset","handleLengthSort","length","this","preparedGoods","filter","value","onChange","event","target","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"+SAEaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,wBACEC,UAAU,SAETD,EAAME,KAAI,SAAAC,GAAI,OACb,wBACEC,IAAKD,EACLF,UAAU,eAETE,SCTIE,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,YAAaN,EAAzB,EAAyBA,UAAzB,OACpB,4BACEO,KAAK,SACLC,QAASH,EACTL,UAAWA,GAEVM,ICDCG,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA2IaC,E,4MAvIbC,MAAQ,CACNZ,MAAM,GAAD,OAAMU,GACXG,SAAS,EACTC,cAAc,EACdC,YAAY,EACZC,OAAQ,EACRC,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,K,EAG9CC,aAAe,WACb,EAAKC,SAAS,CACZN,SAAS,K,EAIbO,cAAgB,WACd,EAAKD,UAAS,SAAAP,GAAK,MAAK,CACtBZ,MAAO,YAAIY,EAAMZ,OAAOqB,e,EAI5BC,mBAAqB,WACM,EAAKV,MAAtBE,aAIJ,EAAKK,UAAS,SAAAP,GAAK,MAAK,CACtBZ,MAAO,YAAIY,EAAMZ,OAAOuB,MACtB,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAE5BX,cAAc,MAIhB,EAAKK,UAAS,SAAAP,GAAK,MAAK,CACtBZ,MAAO,YAAIY,EAAMZ,OAAOuB,MACtB,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,MAE5BV,cAAc,O,EAKtBa,YAAc,WACZ,EAAKR,UAAS,SAAAP,GAAK,MAAK,CACtBZ,MAAM,GAAD,OAAMU,GACXM,OAAQ,O,EAIZY,iBAAmB,WACM,EAAKhB,MAApBG,WAIJ,EAAKI,UAAS,SAAAP,GAAK,MAAK,CACtBZ,MAAO,YAAIY,EAAMZ,OAAOuB,MACtB,SAACC,EAAGC,GAAJ,OAAUD,EAAEK,OAASJ,EAAEI,UAEzBd,YAAY,MAId,EAAKI,UAAS,SAAAP,GAAK,MAAK,CACtBZ,MAAO,YAAIY,EAAMZ,OAAOuB,MACtB,SAACC,EAAGC,GAAJ,OAAUA,EAAEI,OAASL,EAAEK,UAEzBd,YAAY,O,uDAKV,IAAD,SAC4Ce,KAAKlB,MAAhDC,EADD,EACCA,QAASb,EADV,EACUA,MAAOgB,EADjB,EACiBA,OAAQC,EADzB,EACyBA,eAC1Bc,EAAgB/B,EAAMgC,QAAO,SAAA7B,GAAI,OAAIA,EAAK0B,QAAUb,KAE1D,OACE,yBAAKf,UAAU,OACXY,EASA,oCACE,qCACA,yBAAKZ,UAAU,WACb,kBAAC,EAAD,CACEK,QAASwB,KAAKV,cACdb,YAAY,UACZN,UAAU,WAEZ,kBAAC,EAAD,CACEK,QAASwB,KAAKR,mBACdf,YAAY,sBACZN,UAAU,WAEZ,kBAAC,EAAD,CACEK,QAASwB,KAAKF,iBACdrB,YAAY,iBACZN,UAAU,WAEZ,kBAAC,EAAD,CACEK,QAASwB,KAAKH,YACdpB,YAAY,QACZN,UAAU,WAEZ,4BACEgC,MAAOjB,EACPkB,SAAU,SAACC,GACT,EAAKhB,SAAS,CAAEH,QAASmB,EAAMC,OAAOH,UAGvChB,EAAef,KAAI,SAAA+B,GAAK,OACvB,4BACE7B,IAAK6B,EACLA,MAAOA,GAENA,QAKT,kBAAC,EAAD,CAAWjC,MAAO+B,KA/CpB,4BACEvB,KAAK,SACLC,QAASqB,KAAKZ,aACdjB,UAAU,wBAHZ,c,GAhFQoC,IAAMC,eChBxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.562f86ae.chunk.js","sourcesContent":["import React from 'react';\n\nexport const GoodsList = ({ goods }) => (\n  <ul\n    className=\"goods\"\n  >\n    {goods.map(good => (\n      <li\n        key={good}\n        className=\"goods__item\"\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import React from 'react';\n\nexport const Button = ({ handler, textContent, className }) => (\n  <button\n    type=\"button\"\n    onClick={handler}\n    className={className}\n  >\n    {textContent}\n  </button>\n);\n","import React from 'react';\nimport './App.scss';\nimport './components/GoodsList/GoodsList.scss';\nimport './components/Button/Button.scss';\nimport { GoodsList } from './components/GoodsList/GoodsList';\nimport { Button } from './components/Button/Button';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.PureComponent {\n  state = {\n    goods: [...goodsFromServer],\n    loading: false,\n    sortAlphabet: false,\n    sortLength: true,\n    select: 1,\n    selectedValues: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n  }\n\n  startLoading = () => {\n    this.setState({\n      loading: true,\n    });\n  }\n\n  handleReverse = () => {\n    this.setState(state => ({\n      goods: [...state.goods].reverse(),\n    }));\n  }\n\n  handleAlphabetSort = () => {\n    const { sortAlphabet } = this.state;\n\n    sortAlphabet\n      ? (\n        this.setState(state => ({\n          goods: [...state.goods].sort(\n            (a, b) => a.localeCompare(b),\n          ),\n          sortAlphabet: false,\n        }))\n      )\n      : (\n        this.setState(state => ({\n          goods: [...state.goods].sort(\n            (a, b) => b.localeCompare(a),\n          ),\n          sortAlphabet: true,\n        }))\n      );\n  }\n\n  handleReset = () => {\n    this.setState(state => ({\n      goods: [...goodsFromServer],\n      select: 1,\n    }));\n  }\n\n  handleLengthSort = () => {\n    const { sortLength } = this.state;\n\n    sortLength\n      ? (\n        this.setState(state => ({\n          goods: [...state.goods].sort(\n            (a, b) => a.length - b.length,\n          ),\n          sortLength: false,\n        }))\n      )\n      : (\n        this.setState(state => ({\n          goods: [...state.goods].sort(\n            (a, b) => b.length - a.length,\n          ),\n          sortLength: true,\n        }))\n      );\n  }\n\n  render() {\n    const { loading, goods, select, selectedValues } = this.state;\n    const preparedGoods = goods.filter(good => good.length >= select);\n\n    return (\n      <div className=\"App\">\n        {!loading ? (\n          <button\n            type=\"button\"\n            onClick={this.startLoading}\n            className=\"button button--start\"\n          >\n            Start\n          </button>\n        ) : (\n          <>\n            <h1>Goods</h1>\n            <div className=\"buttons\">\n              <Button\n                handler={this.handleReverse}\n                textContent=\"Reverse\"\n                className=\"button\"\n              />\n              <Button\n                handler={this.handleAlphabetSort}\n                textContent=\"Sort alphabetically\"\n                className=\"button\"\n              />\n              <Button\n                handler={this.handleLengthSort}\n                textContent=\"Sort by length\"\n                className=\"button\"\n              />\n              <Button\n                handler={this.handleReset}\n                textContent=\"Reset\"\n                className=\"button\"\n              />\n              <select\n                value={select}\n                onChange={(event) => {\n                  this.setState({ select: +event.target.value });\n                }}\n              >\n                {selectedValues.map(value => (\n                  <option\n                    key={value}\n                    value={value}\n                  >\n                    {value}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <GoodsList goods={preparedGoods} />\n          </>\n        )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}