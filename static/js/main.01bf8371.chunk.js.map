{"version":3,"sources":["components/GoodsItem.js","components/GoodsList.js","components/SortingGoods.js","components/goodsFromServer.js","App.js","index.js"],"names":["GoodsItem","good","GoodsList","goods","map","key","SortingGoods","state","goodsList","props","sortLength","sortAlphabet","select","selectedValues","handleReversed","setState","prevState","reverse","handleAlphabetSort","sort","a","b","localeCompare","handleLengthSort","length","handleReset","this","filteredGoods","filter","type","onClick","value","onChange","event","target","React","Component","goodsFromServer","App","isVisible","activeMenu","ReactDOM","render","document","getElementById"],"mappings":"4OAWeA,EARG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,4BAAKA,ICAMC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,oCACE,4BACGA,EAAMC,KAAI,SAAAH,GAAI,OACb,kBAAC,EAAD,CAAWA,KAAMA,EAAMI,IAAKJ,UC4HrBK,E,4MA/HbC,MAAQ,CACNC,UAAW,EAAKC,MAAMN,MACtBO,YAAY,EACZC,cAAc,EACdC,OAAQ,EACRC,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,K,EAG9CC,eAAiB,WACf,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BR,UAAW,YAAIQ,EAAUR,WAAWS,e,EAIxCC,mBAAqB,WACM,EAAKX,MAAtBI,aAIJ,EAAKI,UAAS,SAAAC,GAAS,MAAK,CAC1BR,UAAW,YAAIQ,EAAUR,WAAWW,MAClC,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAE5BV,cAAc,MAIhB,EAAKI,UAAS,SAAAC,GAAS,MAAK,CAC1BR,UAAW,YAAIQ,EAAUR,WAAWW,MAClC,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,cAAcF,MAE5BT,cAAc,O,EAKtBY,iBAAmB,WACM,EAAKhB,MAApBG,WAIJ,EAAKK,UAAS,SAAAC,GAAS,MAAK,CAC1BR,UAAW,YAAIQ,EAAUR,WAAWW,MAClC,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAEzBd,YAAY,MAId,EAAKK,UAAS,SAAAC,GAAS,MAAK,CAC1BR,UAAW,YAAIQ,EAAUR,WAAWW,MAClC,SAACC,EAAGC,GAAJ,OAAUA,EAAEG,OAASJ,EAAEI,UAEzBd,YAAY,O,EAKpBe,YAAc,WACZ,EAAKV,SAAS,CACZP,UAAW,EAAKC,MAAMN,MACtBS,OAAQ,K,uDAIF,IAAD,SACuCc,KAAKnB,MAA3CC,EADD,EACCA,UAAWK,EADZ,EACYA,eAAgBD,EAD5B,EAC4BA,OAC7Be,EAAgBnB,EACnBoB,QAAO,SAAA3B,GAAI,OAAIA,EAAKuB,QAAUZ,KAEjC,OACE,6BACE,6BACE,4BACEiB,KAAK,SACLC,QAASJ,KAAKZ,gBAFhB,WAOA,4BACEe,KAAK,SACLC,QAASJ,KAAKR,oBAFhB,uBAOA,4BACEW,KAAK,SACLC,QAASJ,KAAKH,kBAFhB,kBAOA,4BACEQ,MAAOnB,EACPoB,SAAU,SAACC,GACT,EAAKlB,SAAS,CAAEH,QAASqB,EAAMC,OAAOH,UAGvClB,EAAeT,KAAI,SAAA2B,GAAK,OACvB,4BACE1B,IAAK0B,EACLA,MAAOA,GAENA,OAKP,4BACEF,KAAK,SACLC,QAASJ,KAAKD,aAFhB,UAOF,kBAAC,EAAD,CAAWtB,MAAOwB,S,GAtHCQ,IAAMC,WCJpBC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UC0BaC,E,4MA9Bb/B,MAAQ,CACNgC,WAAW,G,EAGbC,WAAa,WACX,EAAKzB,SAAS,CACZwB,WAAW,K,uDAIL,IACAA,EAAcb,KAAKnB,MAAnBgC,UAER,OACE,oCACGA,EACC,4BACEV,KAAK,SACLC,QAASJ,KAAKc,YAFhB,SAOA,kBAAC,EAAD,CAAcrC,MAAOkC,S,GAxBbF,IAAMC,WCDxBK,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.01bf8371.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst GoodsItem = ({ good }) => (\n  <li>{good}</li>\n);\n\nGoodsItem.propTypes = {\n  good: PropTypes.string.isRequired,\n};\n\nexport default GoodsItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GoodsItem from './GoodsItem';\n\nexport const GoodsList = ({ goods }) => (\n  <>\n    <ul>\n      {goods.map(good => (\n        <GoodsItem good={good} key={good} />\n      ))}\n    </ul>\n  </>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GoodsList } from './GoodsList';\n\nclass SortingGoods extends React.Component {\n  state = {\n    goodsList: this.props.goods,\n    sortLength: true,\n    sortAlphabet: false,\n    select: 1,\n    selectedValues: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n  };\n\n  handleReversed = () => {\n    this.setState(prevState => ({\n      goodsList: [...prevState.goodsList].reverse(),\n    }));\n  };\n\n  handleAlphabetSort = () => {\n    const { sortAlphabet } = this.state;\n\n    sortAlphabet\n      ? (\n        this.setState(prevState => ({\n          goodsList: [...prevState.goodsList].sort(\n            (a, b) => a.localeCompare(b),\n          ),\n          sortAlphabet: false,\n        }))\n      )\n      : (\n        this.setState(prevState => ({\n          goodsList: [...prevState.goodsList].sort(\n            (a, b) => b.localeCompare(a),\n          ),\n          sortAlphabet: true,\n        }))\n      );\n  };\n\n  handleLengthSort = () => {\n    const { sortLength } = this.state;\n\n    sortLength\n      ? (\n        this.setState(prevState => ({\n          goodsList: [...prevState.goodsList].sort(\n            (a, b) => a.length - b.length,\n          ),\n          sortLength: false,\n        }))\n      )\n      : (\n        this.setState(prevState => ({\n          goodsList: [...prevState.goodsList].sort(\n            (a, b) => b.length - a.length,\n          ),\n          sortLength: true,\n        }))\n      )\n  };\n\n  handleReset = () => {\n    this.setState({\n      goodsList: this.props.goods,\n      select: 1,\n    });\n  };\n\n  render() {\n    const { goodsList, selectedValues, select } = this.state;\n    const filteredGoods = goodsList\n      .filter(good => good.length >= select);\n\n    return (\n      <div>\n        <div>\n          <button\n            type=\"button\"\n            onClick={this.handleReversed}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleAlphabetSort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={this.handleLengthSort}\n          >\n            Sort by length\n          </button>\n\n          <select\n            value={select}\n            onChange={(event) => {\n              this.setState({ select: +event.target.value });\n            }}\n          >\n            {selectedValues.map(value => (\n              <option\n                key={value}\n                value={value}\n              >\n                {value}\n              </option>\n            ))}\n          </select>\n\n          <button\n            type=\"button\"\n            onClick={this.handleReset}\n          >\n            Reset\n          </button>\n        </div>\n        <GoodsList goods={filteredGoods} />\n      </div>\n    );\n  }\n}\n\nSortingGoods.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default SortingGoods;\n","export const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.css';\nimport SortingGoods from './components/SortingGoods';\nimport { goodsFromServer } from './components/goodsFromServer';\n\nclass App extends React.Component {\n  state = {\n    isVisible: true,\n  };\n\n  activeMenu = () => {\n    this.setState({\n      isVisible: false,\n    });\n  }\n\n  render() {\n    const { isVisible } = this.state;\n\n    return (\n      <>\n        {isVisible ? (\n          <button\n            type=\"button\"\n            onClick={this.activeMenu}\n          >\n            Start\n          </button>\n        ) : (\n          <SortingGoods goods={goodsFromServer} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}